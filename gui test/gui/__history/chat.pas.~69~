unit chat;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Addresses, inputer,System.Math;

type
    TMessage = record
      sender: array[1..5] of string;
      msg: array[1..5] of string;
      level: array[1..5] of string;
      time: array[1..5] of string;
      channel: array[1..5] of string;
      type1: array[1..5] of string;
    end;
              {     TMessage = record
      sender: string;
      msg: string;
      level: string;
      time: string;
      channel: string;
      type1: string;
    end;    }

  TChat = class
  private

  public
function GetchatText: string;
function GetStatusBar: string;
    function isChannel( channel: string ): boolean;
    procedure say( channel: string; text: string );
  function GetMessages(): TMessage;
function SimulateWriting(word: string):boolean;
  end;

implementation

uses
  Unit1;
function TChat.isChannel( channel: string ): boolean;
var
  addr: integer;
  name: string;
begin

  if channel = 'Default' then channel := 'Local Chat';
 addr := Memory.ReadPointer(Integer(ADDR_BASE) +  Addresses.guiPointer, [ $40, $30, $30, $30 ] );
  name := Memory.ReadString( addr );
  if (name <> channel) then
  result:= False
end;

procedure TChat.say( channel: string; text: string );
var
  addr: integer;
  name: string;
begin

  if channel = 'Default' then channel := 'Local Chat';
                                          //fixed for 9.83
  addr := Memory.ReadPointer(Integer(ADDR_BASE) +  Addresses.guiPointer, [ $40, $30, $30, $30 ] );
  name := Memory.ReadString( addr );
  while (name <> channel) do
  begin
    Inputer.SendKey( VK_TAB );
    sleep(150);

    addr := Memory.ReadPointer(Integer(ADDR_BASE) +  Addresses.guiPointer, [ $40, $30, $30, $30 ] );
    name := Memory.ReadString( addr );
  end;
       SimulateWriting(text);
  //inputer.SendString( text );
  //inputer.SendKey(VK_RETURN);

end;

function TChat.GetchatText: string;
var
  num, num2, num3: Integer;
  chatText:string;
begin
    num := Memory.ReadInteger(Integer(ADDR_BASE) +guiPointer);
    num2 := Memory.ReadInteger((num + $40));
    num3 := Memory.ReadInteger(((num2 + $44)));
    num3 := Memory.ReadInteger(((num3 + $2c)));
    chatText := Memory.ReadString((num3));
 //   showmessage(chatText);
      Result := chatText;
end;

function TChat.GetStatusBar: string;
var
  time, num2, num3: Integer;
  StatusText:string;
begin
    StatusText := Memory.ReadString(Integer(ADDR_BASE) +lastStatusBar);
    //time til it dissapears
    time := Memory.ReadInteger(Integer(ADDR_BASE) +lastStatusBarTime);
 //   showmessage(inttostr(num));
if time <> 0 then           //if it isn't shown in screen anymore then gtfo u fucker ¬¬
      Result := StatusText
else Result:= '';
end;

function TChat.GetMessages(): TMessage;
var
  ptr, name, addr,i,z,j,number: Integer;
  currentChannel: string;  //array[0..10] of string;
  type2: byte;
  h: integer;
begin
     ptr := Memory.ReadPointer(Integer(ADDR_BASE) +  Addresses.guiPointer, [ $40, $3C ], true);

            while (ptr > 0)   do
            begin
                addr := Memory.ReadPointer(ptr, [$24, $10 ], false);
                currentChannel := Memory.ReadString(Memory.ReadInteger(ptr + $2C));
                number:= addr;
                //here we reset the var's for this new channel....
               i:=0;        //total number of msgs
               z:=0;       // number of msgs -5 (last 5msgs), we will see it later, don't worry bro...

                  while number > 0 do
                  begin
                    number := Memory.ReadInteger(number + $5C);
                    i:=i+1;   //this gives us the number of msgs in this chat
                  end;
                z:= (i- 5);     //yo, I just want last 5 msgs, don't come here with all ur bullshit

                while z > 0 do                //if there is just 1-5 msgs then don't do nothing!!!
                begin
                addr := Memory.ReadInteger(addr + $5C);    //kk, I don't want this msg, let's move to the next one
                z:=z-1;            //4msgs left til we begin taking them, 3msgs left, 2msgs,1, ready!
                end;

                while (addr > 0) do    //now begin taking the last 5 msgs
                for j:=5 downto 1 do

                begin
                  if trystrtoint(copy(memory.ReadString(addr + $8),0,1),h) =False then
                 break;

                    result.sender[j]:= Memory.ReadString(addr + $14);
                                  // showmessage(inttostr(z));
                    result.msg[j]:= Memory.ReadString(Memory.ReadInteger(addr + $4C));
                    result.level[j]:= Memory.ReadString(addr + $3C);
                    result.time[j]:= memory.ReadString(addr + $8);
                    result.channel[j]:= currentChannel;
                    type2:= Memory.ReadByte(addr + $4);
                      if type2 = 1 then
                        result.type1[j]:= 'Default'
                      else if type2 = 7 then
                        result.type1[j]:= 'Channel'
                      else if type2 = $13 then
                        result.type1[j]:= 'Info'
                      else if type2 = 5 then
                        result.type1[j]:= 'NPCtoplayer'
                      else if type2 = 6 then
                        result.type1[j]:= 'Private'
                      else if type2 = $10 then
                        result.type1[j]:= 'Raid_Advance'
                      else if type2 = 15 then
                        result.type1[j]:= 'RedAlert'
                      else if type2 = $15 then
                        result.type1[j]:= 'Send'
                      else if type2 = 0 then
                        result.type1[j]:= 'Status'
                      else if type2 = $12 then
                        result.type1[j]:= 'StatusLog'
                      else if type2 = $11 then
                        result.type1[j]:= 'Welcome'
                      else if type2 = 2 then
                        result.type1[j]:= 'Whisper'
                      else if type2 = 3 then
                        result.type1[j]:= 'Yell';

               //    showmessage(result.time[j]+'  j:'+inttostr(j));
                    addr := Memory.ReadInteger(addr + $5C);     //first msg, second, third...etc
               end;
                ptr := Memory.ReadInteger(ptr + $10);  //next channel yo!
            end;

//Messagetype (type1) = (CHANNEL=7, DEFAULT=1, INFO=$13, NPCTOPLAYER=5, PRIVATE=6, RAID_ADVANCE=$10, REDALERT=15,
// SEND=$15, STATUS=0, STATUSLOG=$12, WELCOME=$11, WHISPER=2, YELL=3);
end;                               {
function TChat.GetMessages(): TMessage;
var
  ptr, name, addr,i,z,j,number: Integer;
  currentChannel: string;  //array[0..10] of string;
  type2: byte;
begin
     i:= 0;
     ptr := Memory.ReadPointer(Integer(ADDR_BASE) +  Addresses.guiPointer, [ $40, $3C ], true);

            while (ptr > 0)   do
            begin
                addr := Memory.ReadPointer(ptr, [$24, $10 ], false);
                currentChannel := Memory.ReadString(Memory.ReadInteger(ptr + $2C));
                number:= addr;
              //  showmessage(inttostr(ptr) + ':ptr');

                  while number > 0 do
                  begin
                    number := Memory.ReadInteger(number + $5C);
                   // showmessage(inttostr(i));
                    i:=i+1;   //this gives us the number of msgs, now we will just take last 5 no?
                  end;           // so this part still remains undone....
            z:= Abs(i- 5);         //yo, I just want last 5 msgs, don't come here with all ur bullshit
//                 showmessage(inttostr(z));
//                                  showmessage(inttostr(i));
                while (addr > 0) and (i > z)do//and (j > 0) do  //just 6 last msgs, why more?
                for j:=1 to 5 do

                begin
                    result.sender[j]:= Memory.ReadString(addr + $14);
                                  // showmessage(inttostr(z));
                    result.msg[j]:= Memory.ReadString(Memory.ReadInteger(addr + $4C));
                    result.level[j]:= Memory.ReadString(addr + $3C);
                    result.time[j]:= memory.ReadString(addr + $8);
                    result.channel[j]:= currentChannel;
                    type2:= Memory.ReadByte(addr + $4);
                      if type2 = 1 then
                        result.type1[j]:= 'Default'
                      else if type2 = 7 then
                        result.type1[j]:= 'Channel'
                      else if type2 = $13 then
                        result.type1[j]:= 'Info'
                      else if type2 = 5 then
                        result.type1[j]:= 'NPCtoplayer'
                      else if type2 = 6 then
                        result.type1[j]:= 'Private'
                      else if type2 = $10 then
                        result.type1[j]:= 'Raid_Advance'
                      else if type2 = 15 then
                        result.type1[j]:= 'RedAlert'
                      else if type2 = $15 then
                        result.type1[j]:= 'Send'
                      else if type2 = 0 then
                        result.type1[j]:= 'Status'
                      else if type2 = $12 then
                        result.type1[j]:= 'StatusLog'
                      else if type2 = $11 then
                        result.type1[j]:= 'Welcome'
                      else if type2 = 2 then
                        result.type1[j]:= 'Whisper'
                      else if type2 = 3 then
                        result.type1[j]:= 'Yell';

                 //  showmessage(result.sender[j]);
                    addr := Memory.ReadInteger(addr + $5C);
                    z:= z +1;         //kk, 1st last msg, 2nd last msg....etc
                   // i:=i+1;
               end;
                ptr := Memory.ReadInteger(ptr + $10);
            end;
            showmessage(getmessages.sender[2]);

//Messagetype (type1) = (CHANNEL=7, DEFAULT=1, INFO=$13, NPCTOPLAYER=5, PRIVATE=6, RAID_ADVANCE=$10, REDALERT=15,
// SEND=$15, STATUS=0, STATUSLOG=$12, WELCOME=$11, WHISPER=2, YELL=3);
end;

                               }

//                        CORRECT WRITING IN CHAT like neo)

function Tchat.SimulateWriting(word: string):boolean;
var
s: string;
Length1: integer;
        begin
            s := GetChatText; //Current string in chat box.
            Length1 := Length(s);

            while (true) do
            begin
                if (s <> word) then// Start and keep writing while isn't the string target.
                begin
                    Length1 := Length(s);
                    if (s = copy(word,0,Length1)) then // If the current string match with the initial part of the string target, press next char.
                        inputer.SendKeyChar(ord(word[Length1+1]))
                    else  //press backspace otherwise.
                        inputer.SendKey(VK_Back);

                    Sleep(randomrange(40, 70));
                end
                else // If we already have our string target, press enter and break the method.
                begin
                        inputer.SendKey(VK_Return);
                    Sleep(randomrange(40, 70));
                    break;
                end;

                s := GetChatText; // recalculate the current string to press next char.
            end;
        end;
end.
